{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["currencies","value","label","App","state","name","age","multiline","currency","handleChange","event","_this","setState","Object","defineProperty","target","classes","this","props","react_default","a","createElement","className","container","noValidate","autoComplete","TextField_default","id","textField","onChange","margin","defaultValue","required","error","disabled","type","InputProps","readOnly","classNames","dense","rowsMax","rows","helperText","placeholder","InputLabelProps","shrink","select","SelectProps","MenuProps","menu","map","option","MenuItem_default","key","native","style","fullWidth","React","Component","withStyles","theme","display","flexWrap","marginLeft","spacing","unit","marginRight","width","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0dbc055d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '€',\n  },\n  {\n    value: 'BTC',\n    label: '฿',\n  },\n  {\n    value: 'JPY',\n    label: '¥',\n  },\n];\n\nclass App extends React.Component {\n  state = {\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          id=\"standard-name\"\n          label=\"Name\"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange('name')}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"standard-uncontrolled\"\n          label=\"Uncontrolled\"\n          defaultValue=\"foo\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          required\n          id=\"standard-required\"\n          label=\"Required\"\n          defaultValue=\"Hello World\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          error\n          id=\"standard-error\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          disabled\n          id=\"standard-disabled\"\n          label=\"Disabled\"\n          defaultValue=\"Hello World\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"standard-password-input\"\n          label=\"Password\"\n          className={classes.textField}\n          type=\"password\"\n          autoComplete=\"current-password\"\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"standard-read-only-input\"\n          label=\"Read Only\"\n          defaultValue=\"Hello World\"\n          className={classes.textField}\n          margin=\"normal\"\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n        <TextField\n          id=\"standard-dense\"\n          label=\"Dense\"\n          className={classNames(classes.textField, classes.dense)}\n          margin=\"dense\"\n        />\n        <TextField\n          id=\"standard-multiline-flexible\"\n          label=\"Multiline\"\n          multiline\n          rowsMax=\"4\"\n          value={this.state.multiline}\n          onChange={this.handleChange('multiline')}\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"standard-multiline-static\"\n          label=\"Multiline\"\n          multiline\n          rows=\"4\"\n          defaultValue=\"Default Value\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"standard-helperText\"\n          label=\"Helper text\"\n          defaultValue=\"Default Value\"\n          className={classes.textField}\n          helperText=\"Some important text\"\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"standard-with-placeholder\"\n          label=\"With placeholder\"\n          placeholder=\"Placeholder\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"standard-textarea\"\n          label=\"With placeholder multiline\"\n          placeholder=\"Placeholder\"\n          multiline\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"standard-number\"\n          label=\"Number\"\n          value={this.state.age}\n          onChange={this.handleChange('age')}\n          type=\"number\"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"standard-search\"\n          label=\"Search field\"\n          type=\"search\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"standard-select-currency\"\n          select\n          label=\"Select\"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange('currency')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText=\"Please select your currency\"\n          margin=\"normal\"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"standard-select-currency-native\"\n          select\n          label=\"Native select\"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange('currency')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText=\"Please select your currency\"\n          margin=\"normal\"\n        >\n          {currencies.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          id=\"standard-full-width\"\n          label=\"Label\"\n          style={{ margin: 8 }}\n          placeholder=\"Placeholder\"\n          helperText=\"Full width!\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          id=\"standard-bare\"\n          className={classes.textField}\n          defaultValue=\"Bare\"\n          margin=\"normal\"\n        />\n      </form>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}